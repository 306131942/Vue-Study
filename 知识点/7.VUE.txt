一、模板语法
1、插值
	文本：<span>Message: {{ msg }}</span>-------------------------“Mustache” 语法（双大括号）的文本插值
	          <span v-once>Message: {{ msg }}</span>
	纯html: <div v-html="rawHtml"></div>----------------------------可忽略
	属性：<div v-bind:id="dynamicId">123</id>-----------------------Mustache 不能在 HTML 属性中使用，应使用 v-bind 指令：
	          <div :id="dynamicId">123</id>------------------------------class, id, style, title, href, alt等属性
	使用JavaScript表达式：每个绑定都只能包含单个表达式（语句不行，代码块不行），
		{{ number + 1 }}
		{{ ok ? 'YES' : 'NO' }}
		{{ message.split('').reverse().join('') }}
		<div v-bind:id="'list-' + id"></div>

2、指令：	指令（Directives）是带有 v- 前缀的特殊属性。指令属性的值预期是单一 JavaScript 表达式（除了 v-for，之后再讨论）。

	<p v-if="seen">Now you see me</p>------------------------------来移除/插入 <p> 元素
	<p v-show="seen">Now you see me</p>

	参数：<a v-bind:href="url"></a>
		在这里 href 是参数，告知 v-bind 指令将该元素的 href 属性与表达式 url 的值绑定。
	          <a v-on:click="doSomething">

	修饰符？

3、过滤器
	Vue.js 允许你自定义过滤器，可被用作一些常见的文本格式化。过滤器可以用在两个地方：mustache 插值{{}}和 v-bind 表达式。
	Vue 2.x 中，过滤器只能在 mustache 绑定和 v-bind 表达式（从 2.1.0 开始支持）中使用，因为过滤器设计目的就是用于文本转换。
	为了在其他指令中实现更复杂的数据变换，你应该使用计算属性。
	
	<!-- in mustaches -->
	{{ message | capitalize }}
	{{ message | filterA | filterB }}
	<!-- in v-bind -->
	<div v-bind:id="rawId | formatId"></div>
	
	new Vue({
 	 // ...
 	 filters: {
  	  capitalize: function (value) {
    	  if (!value) return ''
   	   value = value.toString()
  	    return value.charAt(0).toUpperCase() + value.slice(1)  //第一个字母大写
 	   }
	  }
	})	
	
	{{ message | filterA('arg1', arg2) }}
	这里，字符串 'arg1' 将传给过滤器作为第二个参数， arg2 表达式的值将被求值然后传给过滤器作为第三个参数。

4、缩写
v-bind===:
v-on====@
	<!-- 完整语法 -->
	<a v-bind:href="url"></a>
	<!-- 缩写 -->
	<a :href="url"></a>

	<!-- 完整语法 -->
	<a v-on:click="doSomething"></a>
	<!-- 缩写 -->
	<a @click="doSomething"></a>


二、表单控件绑定：v-model
在实际开发中，表单很常见

v-if知识点
<template v-if="haha">
</template>
<template v-else-if="haha2">
</template>
<template v-else="haha3">
</template>
	